android {
  defaultConfig {
    multiDexEnabled true
  }
}

buildscript {
  repositories {
    google()
    //jcenter()
    //maven {
      //url 'https://maven.fabric.io/public'
    //}
    mavenCentral()
  }
  /*dependencies {
    classpath 'com.google.gms:google-services:4.3.3'
    classpath 'com.android.tools.build:gradle:3.5.2'
    classpath 'com.google.firebase:firebase-crashlytics-gradle:2.4.1'
  }*/

  dependencies{
    //for sdk
    classpath 'com.google.gms:google-services:4.3.14'
    classpath 'com.android.tools.build:gradle:4.1.3'
    classpath 'com.google.firebase:firebase-crashlytics-gradle:2.9.1'
  }
}


repositories {
  google()
  mavenCentral()
  maven {
    url "https://maven.google.com"
  }
}



dependencies {
  //added
  //implementation 'com.android.support:appcompat-v7:28.0.0'
  //implementation 'com.android.support:support-v4:28.0.0'
  //implementation 'com.android.support.constraint:constraint-layout:1.1.0'

  implementation 'androidx.appcompat:appcompat:1.0.0'
  implementation 'androidx.core:core:1.0.0'
  implementation 'androidx.constraintlayout:constraintlayout:2.1.4'


  testImplementation 'junit:junit:4.12'

  //androidTestImplementation 'com.android.support.test:runner:1.0.1'
  //androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.1'

  androidTestImplementation 'androidx.test:runner:1.5.2'
  androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'

  //
  implementation 'me.leolin:ShortcutBadger:1.1.22@aar'
  implementation 'com.google.firebase:firebase-auth:17.0.0'
  implementation 'com.google.firebase:firebase-core:16.0.9'
  ///implementation('com.crashlytics.sdk.android:crashlytics:2.10.1@aar') {
    //transitive = true
  //}
  //Added
  implementation 'androidx.work:work-runtime:2.7.1'

  // GSON
  //implementation 'com.google.code.gson:gson:2.8.5'  
}

/*
cdvPluginPostBuildExtras.add({
  apply plugin: 'com.google.gms.google-services'
  apply plugin: 'com.google.firebase.crashlytics'
})
*/

android {

  packagingOptions {
    exclude 'META-INF/NOTICE'
    exclude 'META-INF/LICENSE'
  }
}


cdvPluginPostBuildExtras.add({
  //apply plugin: 'com.google.gms.google-services'
  apply plugin: com.google.firebase.crashlytics.buildtools.gradle.CrashlyticsPlugin
   afterEvaluate {
        rootProject.subprojects {
            if (name == "app") {
                if (!plugins.hasPlugin('com.google.gms.google-services')) {
                    apply plugin: com.google.gms.googleservices.GoogleServicesPlugin
                }
            }
        }
    }
})

